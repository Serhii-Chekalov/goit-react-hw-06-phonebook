{"version":3,"sources":["redux/PhoneBook/actions.js","redux/PhoneBook/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactList.styled.jsx","components/ContactsList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.js","components/App/App.js","redux/PhoneBook/reducers.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","removeContact","getFilterName","contacts","state","items","filter","visibleContacts","getFilter","getContacts","contact","toLowerCase","includes","Form","styled","form","Label","label","Input","input","Button","button","ContactForm","useState","setName","setNumber","stateContacts","useSelector","dispatch","useDispatch","handleChange","e","target","value","newContact","contactToAdd","some","toast","notify","action","onSubmit","preventDefault","htmlFor","onChange","type","pattern","title","required","position","toastOptions","duration","style","background","color","List","ul","ListItem","li","ContactList","filteredContacts","map","onClick","Wrapper","div","Filter","formFilter","PrimaryTitle","h1","SecondaryTitle","h2","App","setFilter","itemReducer","createReducer","filterReducer","contactsReducer","combineReducers","persistConfig","key","storage","rootReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.80f5cdc0.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addContact = createAction(\n  \"contact/addContact\",\n  ({ name, number }) => ({\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  })\n);\n\nexport const removeContact = createAction(\"contact/removeContact\");\nexport const getFilterName = createAction(\"contact/filteredContacts\");\n","export const contacts = (state) => state.contacts.items;\nexport const filter = (state) => state.contacts.filter;\n\nexport const getFilter = (state) => state.contacts.filter;\nexport const getContacts = (state) => state.contacts.items;\n\nexport const visibleContacts = (state) => {\n  const filter = getFilter(state);\n  const contacts = getContacts(state);\n  if (filter !== \"\") {\n    if (contacts !== []) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter)\n      );\n    }\n  } else {\n    return contacts;\n  }\n};\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  margin-left: 70px;\n  padding: 10px 200px 10px 10px;\n  border: 2px solid black;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  padding: 3px;\n  margin-top: 5px;\n  margin-bottom: 15px;\n  &:hover {\n    border-color: blue;\n  }\n`;\n\nexport const Button = styled.button`\n  width: fit-content;\n  padding: 4px;\n  margin-top: 8px;\n  font-size: 14px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  background-color: #fff;\n  &:hover {\n    cursor: pointer;\n    background-color: blue;\n    border-color: blue;\n  }\n`;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { addContact } from \"../../redux/PhoneBook/actions\";\nimport { contacts } from \"../../redux/PhoneBook/selectors\";\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const stateContacts = useSelector(contacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    newContact();\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const notify = (name) => toast(`${name} is already in contacts`);\n\n  const newContact = () => {\n    const contactToAdd = {\n      name,\n      number,\n    };\n\n    stateContacts.some((contact) => contact.name.toLowerCase() === contactToAdd.name.toLowerCase())\n      ? notify(contactToAdd.name)\n      : dispatch(addContact(contactToAdd));\n  };\n\n  return (\n    <>\n      <Form action=\"\" onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n      <Toaster\n        position=\"top-center\"\n        toastOptions={{\n          duration: 3000,\n          style: {\n            background: \"#f8cd98\",\n            color: \"#000\",\n          },\n        }}\n      />\n    </>\n  );\n}\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  margin-left: 70px;\n`;\n\nexport const ListItem = styled.li`\n  margin-top: 10px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  padding: 3px 6px;\n  margin-left: 10px;\n  font-size: 12px;\n  background-color: #fff;\n  border: 1px solid grey;\n  border-radius: 5px;\n  &:hover {\n    cursor: pointer;\n    background-color: blue;\n    border-color: blue;\n  }\n`;\n","import { List, ListItem, Button } from \"./ContactList.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeContact } from \"../../redux/PhoneBook/actions\";\nimport { visibleContacts } from \"../../redux/PhoneBook/selectors\";\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(visibleContacts);\n\n  return (\n    <div>\n      <List>\n        {filteredContacts.map((contact) => {\n          const { id, name, number } = contact;\n          return (\n            <ListItem key={id}>\n              {name} - {number}\n              <Button type=\"button\" onClick={() => dispatch(removeContact(id))}>\n                Delete\n              </Button>\n            </ListItem>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  margin-left: 70px;\n`;\n\nexport const Input = styled.input`\n  padding: 3px;\n  margin-top: 5px;\n  &:hover {\n    border-color: blue;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n`;\n","import { Wrapper, Input, Label } from \"./Filter.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilterName } from \"../../redux/PhoneBook/actions\";\nimport { filter } from \"../../redux/PhoneBook/selectors\";\n\nconst Filter = () => {\n  const formFilter = useSelector(filter);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={formFilter}\n        onChange={(e) => dispatch(getFilterName(e.target.value.toLowerCase()))}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n","import styled from \"@emotion/styled\";\n\nexport const PrimaryTitle = styled.h1`\n  margin-left: 70px;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-left: 70px;\n`;\n","import { useState } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactsList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport { PrimaryTitle, SecondaryTitle } from \"./App.styled\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nfunction App() {\n  const [filter, setFilter] = useState(\"\");\n\n  const handleFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <>\n      <Toaster\n        position=\"top-center\"\n        toastOptions={{\n          duration: 3000,\n          style: {\n            background: \"red\",\n            color: \"#000\",\n          },\n        }}\n      />\n      <PrimaryTitle>Phonebook</PrimaryTitle>\n      <ContactForm />\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter onChange={handleFilter} value={filter} />\n      <ContactList />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, removeContact, getFilterName } from \"./actions\";\n\nconst itemReducer = createReducer(\n  [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],\n  {\n    [addContact]: (state, { payload }) => [...state, payload],\n    [removeContact]: (state, { payload }) =>\n      state.filter(({ id }) => id !== payload),\n  }\n);\n\nconst filterReducer = createReducer(\"\", {\n  [getFilterName]: (state, { payload }) => (state = payload),\n});\n\nconst contactsReducer = combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./PhoneBook/reducers\";\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./components/App/App\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}